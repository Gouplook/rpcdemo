### 聚合支付B2C线上消费下单接口

<button type='button' class='btn btn-sm btn-success apply'>申请使用</button>

###### 1 功能说明

聚合支付B2C线上消费下单：

（1）基于微信公众号，实现微信支付功能，需要在微信服务商平台建立子商户和商户公众号的绑定关系；

（2）基于微信小程序，实现微信支付功能，需要在微信服务商平台建立子商户和商户小程序的绑定关系；

（3）基于商户APP，实现微信支付功能，需要在微信服务商平台建立子商户和商户APP的绑定关系；

（4）基于支付宝生活号，实现支付宝支付功能；

（5）基于商户APP，实现支付宝支付功能；

（6）基于商户APP，实现云闪付支付功能。



###### 2 请求路径

| 环境     | 地址                                                         |
| -------- | ------------------------------------------------------------ |
| 正式环境 | <https://gw.open.icbc.com.cn/api/cardbusiness/aggregatepay/b2c/online/consumepurchase/V1> |

###### 3 通用请求参数

| 参数名       | 类型 | 是否必输 | 最大长度 | 描述                                                         | 示例值                             |
| ------------ | ---- | -------- | -------- | ------------------------------------------------------------ | ---------------------------------- |
| app_id       | str  | true     | 20       | APP的编号,应用在API开放平台注册时生成                        |                                    |
| msg_id       | str  | true     | 40       | 消息通讯唯一编号，每次调用独立生成，APP级唯一                | urcnl24ciutr9                      |
| format       | str  | false    | 5        | 请求参数格式，仅支持json                                     | json                               |
| charset      | str  | false    | 10       | 字符集 ,缺省为UTF-8                                          | UTF-8                              |
| encrypt_type | str  | false    | 5        | 现在仅支持AES，部分接口支持加密，如接口无需加密，参数中此字段无需上送 | AES                                |
| sign_type    | str  | false    | 10       | 签名类型，CA-工行颁发的证书认证，RSA-RSAWithSha1，RSA2-RSAWithSha256，缺省为RSA | RSA2                               |
| sign         | str  | true     | 300      | 报文签名                                                     | ERITJKEIJKJHKKKKKKKHJEREEEEEEEEEEE |
| timestamp    | str  | true     | 19       | 交易发生时间戳，yyyy-MM-dd HH:mm:ss格式                      | 2016-10-29 20:44:38                |
| ca           | str  | false    | 2048     | 采用ca认证方式时，需上送证书                                 |                                    |
| biz_content  | str  | true     | -        | 请求参数的集合                                               | -                                  |

###### 4 请求参数说明

###### 4.1 biz_content参数说明

| 参数名           | 类型 | 是否必输 | 最大长度 | 描述                                                         | 示例值               |
| ---------------- | ---- | -------- | -------- | ------------------------------------------------------------ | -------------------- |
| mer_id           | str  | true     | 20       | 商户编号                                                     |                      |
| out_trade_no     | str  | true     | 50       | 商户订单号，只能是数字、大小写字母，且在同一个商户号下唯一   |                      |
| pay_mode         | str  | true     | 3        | 支付方式，9-微信；10-支付宝；13-云闪付                       | 9                    |
| access_type      | str  | true     | 2        | 收单接入方式，5-APP，7-微信公众号，8-支付宝生活号，9-微信小程序 | 5                    |
| mer_prtcl_no     | str  | true     | 20       | 收单产品协议编号                                             |                      |
| orig_date_time   | str  | true     | 19       | 交易日期时间，格式为yyyy-MM-dd'T'HH:mm:ss                    | 2019-07-09T12:11:03  |
| decive_info      | str  | true     | 32       | 设备号                                                       | 013467007045764      |
| body             | str  | true     | 128      | 商品描述，商品描述交易字段格式根据不同的应用场景按照以下格式：1）PC网站：传入浏览器打开的网站主页title名-实际商品名称 ；2）公众号：传入公众号名称-实际商品名称；3）H5：传入浏览器打开的移动网页的主页title名-实际商品名称；4）线下门店：门店品牌名-城市分店名-实际商品名称；5）APP：传入应用市场上的APP名字-实际商品名称 |                      |
| fee_type         | str  | true     | 3        | 交易币种，目前工行只支持使用人民币（001）支付                | 001                  |
| spbill_create_ip | str  | true     | 16       | 用户端IP                                                     | 192.168.255.255      |
| total_fee        | str  | true     | 17       | 订单金额，单位为分                                           | 100                  |
| mer_url          | str  | true     | 1024     | 异步通知商户URL，端口必须为443或80                           |                      |
| shop_appid       | str  | false    | 32       | 商户在微信开放平台注册的APPID，支付方式为微信时不能为空      |                      |
| icbc_appid       | str  | true     | 20       | 商户在工行API平台的APPID                                     |                      |
| open_id          | str  | false    | 128      | 第三方用户标识，商户在微信公众号内或微信小程序内接入时必送，即access_type为7或9时，上送用户在商户APPID下的唯一标识；商户通过支付宝生活号接入时不送 | oUSDOusdsdISLSDlskdf |
| union_id         | str  | false    | 128      | 第三方用户标识，商户在支付宝生活号接入时必送，即access_type为8时，上送用户的唯一标识；商户通过微信公众号内或微信小程序接入时不送 | oUSDOusdsdISLSDlskdf |
| mer_acct         | str  | false    | 34       | 商户账号，商户入账账号，只能交易时指定。（商户付给银行手续费的账户，可以在开户的时候指定，也可以用交易指定方式；用交易指定方式则使用此商户账号）目前暂不支持 | 6212880200000038618  |
| expire_time      | str  | false    | 6        | 订单失效时间，单位为秒，建议大于60秒                         | 120                  |
| attach           | str  | false    | 127      | 附加数据，在查询API和支付通知中原样返回，该字段主要用于商户携带订单的自定义数据 |                      |
| notify_type      | str  | true     | 2        | 通知类型，表示在交易处理完成后把交易结果通知商户的处理模式。 取值“HS”：在交易完成后将通知信息，主动发送给商户，发送地址为mer_url指定地址； 取值“AG”：在交易完成后不通知商户 | HS                   |
| result_type      | str  | false    | 1        | 结果发送类型，通知方式为HS时有效。取值“0”：无论支付成功或者失败，银行都向商户发送交易通知信息；取值“1”，银行只向商户发送交易成功的通知信息。默认是"0" | 0                    |
| pay_limit        | str  | false    | 10       | 支付方式限定，上送”no_credit“表示不支持信用卡支付；上送“no_balance”表示仅支持银行卡支付；不上送或上送空表示无限制 | no_credit            |
| order_apd_inf    | str  | false    | 100      | 订单附加信息                                                 |                      |
| detail           | str  | false    | 4000     | 商品详细描述，对于使用单品优惠的商户，该字段必须按照规范上传。微信与支付宝的规范不同，请根据支付方式对应相应的规范上送，详细内容参考文末说明 |                      |
| return_url       | str  | false    | 256      | 支付成功回显页面，支付成功后，跳转至该页面显示。当access_type=5且pay_mode=10才有效 |                      |
| quit_url         | str  | false    | 400      | 用户付款中途退出返回商户网站的地址（仅对浏览器内支付时有效）当access_type=5且pay_mode=10才有效 |                      |

###### 5 通用响应参数

| 参数名               | 类型 | 是否非空 | 最大长度 | 描述                            | 示例值                    |
| -------------------- | ---- | -------- | -------- | ------------------------------- | ------------------------- |
| response_biz_content | str  | true     | -        | 响应参数集合,包含公共和业务参数 | -                         |
| sign                 | str  | true     | 300      | 针对返回参数集合的签名          | ERITJKEIJKJHKHJEREEEEEEEE |

###### 6 响应参数说明

| 参数名                  | 类型 | 是否必输 | 最大长度 | 描述                                                         | 示例值                         |
| ----------------------- | ---- | -------- | -------- | ------------------------------------------------------------ | ------------------------------ |
| return_code             | int  | true     | 15       | 返回码，交易成功返回0，其余为失败情况                        | 0                              |
| return_msg              | str  | true     | -        | 返回信息描述                                                 | success                        |
| msg_id                  | str  | true     | 40       | 用于确定一笔签名的唯一性，不能重复                           | 201808311413244567657          |
| total_amt               | str  | true     | 17       | 订单总金额，一笔订单一个，以分为单位。不可以为零，必需符合金额标准 | 500                            |
| out_trade_no            | str  | true     | 50       | 商户系统订单号，原样返回                                     |                                |
| order_id                | str  | true     | 30       | 工行订单号                                                   | 020001030558000611912230005002 |
| pay_time                | str  | true     | 8        | 支付完成时间，格式为：yyyyMMdd                               |                                |
| mer_id                  | str  | true     | 20       | 商户编号                                                     | 020001021189                   |
| pay_mode                | str  | false    | 3        | 支付方式，1-刷卡支付；2-工行快捷支付；3-网银支付；4-新型无卡；5-简单无卡；6-银联快捷支付；7-3D支付；8-ApplePay；9-微信；10-支付宝；11-非3D支付；12-银联系扫码付；13-云闪付 | 9                              |
| access_type             | str  | true     | 2        | 收单接入方式，5-APP，7-微信公众号，8-支付宝生活号，9-微信小程序 | 5                              |
| card_kind               | str  | false    | 2        | 卡种，90-VISA外卡、91-MASTER外卡、92-运通外卡、93-大来外卡、94-JCB外卡 |                                |
| trade_type              | str  | false    | 16       | 支付方式为微信时返回，交易类型，JSAPI ：公众号支付、小程序支付；APP：APP支付； | APP                            |
| wx_data_package         | str  | false    | -        | 支付方式为微信时返回，微信数据包，用于之后唤起微信支付。详细内容请参考微信支付开放平台接口 |                                |
| zfb_data_package        | str  | false    | -        | 支付方式为支付宝时返回，支付宝数据包，用于之后唤起支付宝支付。详细内容请参考支付宝开放平台接口 |                                |
| union_data_package      | str  | false    | -        | 支付方式为云闪付时返回，云闪付受理订单号，用于之后进行银联云闪付支付。详细内容请参考银联开放平台的手机支付控件接口 |                                |
| third_party_return_code | str  | false    | -        | 第三方报错时返回的报错码                                     |                                |
| third_party_return_msg  | str  | false    | -        | 第三方报错时返回的报错信息                                   |                                |



###### 7 使用示例

```java
//签名类型为RSA时，需传入appid，私钥和网关公钥，签名类型使用定值IcbcConstants.SIGN_TYPE_RSA，其他参数使用缺省值
DefaultIcbcClient client = new DefaultIcbcClient(APP_ID,IcbcConstants.SIGN_TYPE_RSA2,MY_PRIVATE_KEY, APIGW_PUBLIC_KEY);
CardbusinessAggregatepayB2cOnlineConsumepurchaseRequestV1 request = new CardbusinessAggregatepayB2cOnlineConsumepurchaseRequestV1();
//根据测试环境和生产环境替换相应ip和端口
request.setServiceUrl("https://gw.open.icbc.com.cn/api/cardbusiness/aggregatepay/b2c/online/consumepurchase/V1");
CardbusinessAggregatepayB2cOnlineConsumepurchaseRequestV1Biz bizContent = new CardbusinessAggregatepayB2cOnlineConsumepurchaseRequestV1Biz();
request.setBizContent(bizContent);
//请对照接口文档用bizContent.setxxx()方法对业务上送数据进行赋值
bizContent.setMer_id("020001021189");
bizContent.setOut_trade_no("65964126858");
bizContent.setPay_mode("9");
bizContent.setAccess_type("5");
bizContent.setMer_prtcl_no("965412357");
bizContent.setOrig_date_time("2019-07-09T12:11:03");
bizContent.setDecive_info("013467007045764");
bizContent.setBody("喜士多");
bizContent.setFee_type("001");
bizContent.setSpbill_create_ip("122.12.12.12");
bizContent.setTotal_fee("100");
bizContent.setMer_url("http://www.test.com/notifyurl");
bizContent.setShop_appid("wx8888888888888888");
bizContent.setIcbc_appid("10000000000000002889");
bizContent.setOpen_id("");
bizContent.setUnion_id("");
bizContent.setMer_acct("6212880200000038618");
bizContent.setExpire_time("120");
bizContent.setAttach("{ \"id\": \"SZTX001\", \"name\": \"腾大餐厅\", \"area_code\": \"440305\", \"address\": \"科技园中一路腾讯大厦\" }");
bizContent.setNotify_type("HS");
bizContent.setResult_type("0");
bizContent.setPay_limit("no_credit");
bizContent.setOrder_apd_inf("");
CardbusinessAggregatepayB2cOnlineConsumepurchaseResponseV1 response;
try {
response = client.execute(request, System.currentTimeMillis()+"");//msgId消息通讯唯一编号，要求每次调用独立生成，APP级唯一
if (response.getReturnCode() == 0) {
// 6、业务成功处理，请根据接口文档用response.getxxx()获取同步返回的业务数据
System.out.println("ReturnCode:"+response.getReturnCode());
System.out.println("response:" + JSON.toJSONString(response));
} else {
// 失败
System.out.println("response:" + JSON.toJSONString(response));
System.out.println("ReturnCode:"+response.getReturnCode());
System.out.println("ReturnMsg:"+response.getReturnMsg());
}
} catch (IcbcApiException e) {
e.printStackTrace();
}
}
```



###### 8 请求示例

```json
POST HTTP/1.1
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
            https://gw.open.icbc.com.cn/api/cardbusiness/aggregatepay/b2c/online/consumepurchase/V1?app_id=Oikeclo001&msg_id=urcnl24ciutr9&format=json&charset=UTF-8&sign_type=RSA2&sign=TRFEWHYUFCEW&timestamp=2019-10-29 20:44:31&biz_content=
            {
            "mer_id":"020001021189",
            "out_trade_no":"65964126858",
            "pay_mode":"9",
            "access_type":"5",
"mer_prtcl_no":"965412357",
"orig_date_time":"2019-07-09T12:11:03",
"decive_info":"013467007045764",
"body":"喜士多",
"fee_type":"001",
"spbill_create_ip":"122.12.12.12",
"total_fee":"100",
"mer_url":"http:\/\/www.test.com\/notifyurl",
"shop_appid":"wx8888888888888888",
"icbc_appid":"10000000000000002889",
"open_id":"",
"union_id":"",
"mer_acct":"6212880200000038618",
"expire_time":"120",
"attach":"{\"id\": \"SZTX001\",\"name\": \"腾大餐厅\",\"area_code\": \"440305\",\"address\": \"科技园中一路腾讯大厦\"}",
"order_apd_inf":"",
"detail":"{\"cost_price\": 100,\"receipt_id\": \"wx123\",\"goods_detail\":[{\"goods_id\": \"商品编码\",\"wxpay_goods_id\": \"1001\",\"goods_name\": \"\",\"quantity\": 1,\"price\": 100}]}",
"notify_type":"HS",
"result_type":"0",
"pay_limit":"",
"return_url":"",
"quit_url":""
}
```



###### 9 响应示例

```json
HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
{
"response_biz_content":{
"return_code":0,
"return_msg":"success",
"msg_id":"201808311413244567657",
"total_amt":"100",
"out_trade_no":"65964126858",
"order_id":"020001030558000611912230005002",
"pay_time":"20190124",
"mer_id":"0200EG0000202",
"pay_mode":"9",
"access_type":"5",
"card_kind":"",
"trade_type":"APP",
"wx_data_package":"{\"appid\":\"wx8888888888888881\",\"partnerid\":\"1900000109\",\"prepayid\":\"WX1217752501201407033233368018\",\"package\":\"Sign=WXPay\",\"noncestr\":\"5K8264ILTKCH16CQ2502SI8ZNMTM67VS\",\"timestamp\":\"1412000000\",\"sign\":\"C380BEC2BFD727A4B6845133519F3AD6\"}",
"zfb_data_package":"",
"union_data_package":"",
"third_party_return_code":"",
"third_party_return_msg":""
},
"sign":"ERITJKEIJKJHKKKKKKKHJEREEEEEEEEEEE"
}
```



###### 10 异常示例

```json
HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
{
"response_biz_content":{
"return_code":42010031,
"return_msg":"调SAES消费下单服务失败:消费下单调用BOOM失败：买家不存在",
"third_party_return_code": "ACQ.BUYER_NOT_EXIST",
"third_party_return_msg": "买家不存在",
"msg_id":"urcnl24ciutr9"
},
"sign":"ERITJKEIJKJHKKKKKKKHJEREEEEEEEEEEE"
}
```



###### 11 返回码解释

| 返回码  | 返回说明                                                     |
| ------- | ------------------------------------------------------------ |
| 0       | 成功                                                         |
| 400011  | 参数非法，原因可能为app id为空、app id非法、签名为空、应用系统时间与API平台系统时间不在限定差值以内、时间戳非法 |
| 500018  | 访问的API不存在                                              |
| 500020  | 非法调用                                                     |
| 400016  | app公钥未维护                                                |
| 400017  | 签名验证失败                                                 |
| 400019  | 授权验证失败                                                 |
| 500031  | 速率超限                                                     |
| 500032  | 并发超限                                                     |
| -500041 | 代理异常                                                     |
| -500042 | 代理超时                                                     |
| -500044 | 网关签名失败                                                 |
| 500043  | 网关配置文件错误，无法从配置文件中读取配置                   |
| -500099 | 网关内部异常                                                 |

###### 12 异步通知商户接口说明

###### 12.1 功能说明

工行通过该接口给商户发送支付结果通知。在接收到工行的支付结果通知后，一定要返回应答，否则工行会认为该通知失败，在一定时间区间内多次发起通知

###### 13 通用请求(异步回调)参数

| 参数名       | 类型 | 是否必输 | 最大长度 | 描述                                                         | 示例值                                                       |
| ------------ | ---- | -------- | -------- | ------------------------------------------------------------ | ------------------------------------------------------------ |
| from         | str  | true     | -        | 工行调用固定为icbc-api                                       | icbc-api                                                     |
| api          | str  | true     | -        | 接口路径，调用哪一个接口的回调                               | /api/cardbusiness/aggregatepay/b2c/online/consumepurchase/V1 |
| app_id       | str  | true     | -        | 合作方在工行开具的应用编号                                   |                                                              |
| charset      | str  | true     | -        | 调用过程使用的编码格式                                       | utf-8                                                        |
| format       | str  | true     | -        | 报文类型                                                     | json                                                         |
| encrypt_type | str  | false    | -        | 加密方式，此接口默认不加密                                   | -                                                            |
| timestamp    | str  | true     | -        | 回调发生时间，格式为“yyyy-MM-dd HH:mm:ss”                    | 2017-01-12 17:33:56                                          |
| sign_type    | str  | true     | -        | 签名类型,目前网关回调请求的签名只支持RSA方式，需要合作方使用网关公钥验签 | RSA                                                          |
| sign         | str  | true     | -        | 工行签名                                                     | FSDFDRYXDS342FDSR                                            |
| biz_content  | str  | true     | -        | 业务参数集合，详见业务参数说明                               | -                                                            |

###### 14 请求(异步回调)参数

| 参数名         | 类型 | 是否必输 | 最大长度 | 描述                                                         | 示例值                         |
| -------------- | ---- | -------- | -------- | ------------------------------------------------------------ | ------------------------------ |
| return_code    | str  | true     | 15       | 返回码，交易成功返回0，其他表示业务报错                      | 0                              |
| return_msg     | str  | true     | -        | 返回码说明                                                   | -                              |
| msg_id         | str  | false    | 40       | 消息号                                                       |                                |
| card_no        | str  | false    | 19       | 屏蔽后的银行卡号，暂返回空                                   |                                |
| mer_id         | str  | false    | 20       | 商户编号                                                     | 020001021189                   |
| total_amt      | str  | false    | 17       | 订单总金额，单位：分                                         | 100                            |
| point_amt      | str  | false    | 17       | 积分抵扣金额，单位：分                                       | 0                              |
| ecoupon_amt    | str  | false    | 17       | 电子券抵扣金额，单位：分                                     | 0                              |
| mer_disc_amt   | str  | false    | 17       | 优惠立减金额（商户部分），单位：分                           | 0                              |
| coupon_amt     | str  | false    | 17       | 优惠券金额，单位：分                                         | 0                              |
| bank_disc_amt  | str  | false    | 17       | 银行补贴金额，单位：分                                       | 0                              |
| payment_amt    | str  | false    | 17       | 用户实际扣减金额，单位：分                                   | 100                            |
| out_trade_no   | str  | false    | 50       | 商户系统订单号，原样返回                                     | -                              |
| order_id       | str  | false    | 30       | 工行订单号                                                   |                                |
| pay_time       | str  | false    | 14       | 支付完成时间，yyyyMMddHHmmss格式                             |                                |
| total_disc_amt | str  | false    | 17       | 总优惠金额，其值=优惠立减金额（商户部分）+银行补贴金额，单位：分 | 0                              |
| attach         | str  | false    | 127      | 商户附加数据                                                 | -                              |
| third_trade_no | str  | false    | 128      | 第三方订单号                                                 | 020001030558000511912260014005 |
| card_flag 	 | str  | false    | 2        | 发卡行标志1：银联卡，2：本行卡，3：外卡；                                                 |              |
| decr_flag 	 | str  | false    | 2        | 卡借贷标志:1-借，2-贷                                    |  |
| open_id 	   	 | str  | false    | 128      | openID                        |              |
| pay_type | str | false | 2 | 支付方式：1-刷卡支付；2-工行快捷支付；3-网银支付；4-新型无卡；5-简单无卡；6-银联快捷支付；7-3D支付；8-ApplePay；9-微信；10-支付宝；11-非3D支付；12-银联扫码付；13-云闪付 | |
| access_type | str | false | 2 | 接入方式：1-POS；2-主扫码；3-被扫码；4-H5；5-APP；6-PC；7-公众号（微信）；8-生活号（支付宝； 9-小程序 ；10-无感接入；11-其它 | |
| card_kind | str | false | 3 | 卡种：1：牡丹准贷记卡；2：牡丹专用卡；3：牡丹灵通卡；7：牡丹贷记卡；8：牡丹国际卡10：牡丹客户卡；11：理财金卡E时代卡；15：预付卡；80：银联卡 | |
###### 15 请求(异步回调)示例

```json
POST HTTP/1.1
Content-Type: application/x-www-form-urlencoded; charset=UTF-8

http://xxxx?api=/api/cardbusiness/aggregatepay/b2c/online/consumepurchase/V1&app_id=2014072300007140&charset=utf-8&format=json&from=icbc-api&sign_type=RSA&timestamp=2016-09-18 17:33:56&sign=xxxxx&biz_content=
{
"return_code":"0",
"return_msg":"success",
"msg_id":"urcnl24ciutr9",
"card_no":"",
"mer_id":"020001021935",
"total_amt":"100",
"point_amt":"0",
"ecoupon_amt":"0",
"mer_disc_amt":"0",
"coupon_amt":"0",
"bank_disc_amt":"0",
"payment_amt":"100",
"out_trade_no":"ZHL777O15002039",
"order_id":"020002040095201802202148775",
"pay_time":"20190112121212",
"total_disc_amt":"0",
"attach":"abcdefg",
"third_trade_no":"020001030558000511912260014005",
"card_flag":"1",
"decr_flag":"2",
"open_id":"2088632368220152",
"pay_type":"1",
"access_type":"5",
"card_kind":""
}
```
###### 16  通用响应(异步回调)参数

| 参数名               | 类型 | 是否必输 | 最大长度 | 描述                                                | 示例              |
| -------------------- | ---- | -------- | -------- | --------------------------------------------------- | ----------------- |
| response_biz_content | str  | true     | -        | 接口返回参数                                        |                   |
| sign_type            | str  | true     | -        | 签名类型，需与商户在工行登记app的签名类型保持一致   | RSA2              |
| ca                   | str  | false    | -        | 签发的证书（base64enc），若签名类型为CA则该字段必输 |                   |
| sign                 | str  | true     | -        | 工行签名                                            | FSDFDRYXDS342FDSR |

###### 17 响应(异步回调)参数

| 参数名      | 类型 | 是否必输 | 最大长度 | 描述                                    | 示例值                |
| ----------- | ---- | -------- | -------- | --------------------------------------- | --------------------- |
| return_code | str  | true     | 10       | 返回码，交易成功返回0，其他表示业务报错 | 0                     |
| return_msg  | str  | true     | 200      | 返回码说明                              | -                     |
| msg_id      | str  | true     | 40       | 用于确定一笔签名的唯一性,不能重复       | 201808311413244567657 |

通知签名处理

上行网关会对通知报文做如下签名处理逻辑如下：

签名数据为：通知地址路径path+”?”+请求参数asc排序（参数中间通过”&”连接，参数名值对之间通过”=”连接）,若商户通知地址为https://www.scgsj.com**/notify.do**，签名方式为RSA，参数带签名内容为：

**/notify.do?**api=/api/cardbusiness/aggregatepay/b2c/online/consumepurchase/V1&app_id=2014072300007140&biz_content={"msg_id":"201808311413244567657","return_code":0,"return_msg":"success",orderInfo":{"interfaceName": "ICBC_PEEBANK_CERTVERIFY","language":"ZH_CN","orderDate":"20130606","orderTime":"180000"}}&charset=utf-8&format=json&from=icbc-api&sign_type=RSA&timestamp=2016/9/18 17:33:56



###### 18 响应(异步回调)示例

通知应答可参考sdk中的icbc-api-sdk-cop\doc\attachment\NotifyDemo，应答注意要点：

1、签名字符串为**"response_biz_content":{  "return_code":0,"return_msg":"success","msg_id":"201808311413244567657"},"sign_type":"RSA2"**不含空格换行符；

2、sign_type为在工行登记app的签名类型保持一致，一般为RSA2；

3、return_code为数字，成功时为0；

4、返回字符串顺序不能变，为response_biz_content、sign_type、sign，中间不含空格换行符；

5、正常只会通知一次，如果应答失败，则会在一定时间，目前是10mins内，尝试发通知，每次发三次。

HTTP/1.1 200 OK
Content-Type: application/json; charset=UTF-8
{
"response_biz_content":{
"return_code":0,
"return_msg":"success",
"msg_id":"201808311413244567657"
},
"sign_type":"RSA2",
"sign":"OiN/Mh/WvxKgBO2Uxk/4osG8jKDckz6SLZKLQBb8iJvSDRuIgop6u1MRddxu6vhJROissLgR/2hlKFgVpHSdNDB8t+4fXBHDCBkTI9AkMxb7k1vA4zFDufc4dXs6WfWNy1unXlLF9dIJ6CxyKg3tW23HueHqcpSu3iUIpyHHz7ZdQ1TRJo/wRFIZqRuXI3z9FmuX/BT5PhwxUOM9wKGkWt6e4mU2cXGNBKVpnEqNyChOAzrD1gbe6XRK+HQVEdjyh3k4wAkUxYL7IRiR6Lkf4CFG+dEa3wvOxEYrayxjsk7wY7UcCOH0Avh2SequaVl8pcxivsAsfayUAqah5NdmYQ=="
}



订单在获取第三方支付结果的处理流程

支付成功后，在expire_time订单失效时间内，分别有以下获取第三方支付结果的处理阶段，每个阶段超时之后会触发后续阶段：

阶段一：等待第三方（微信、支付宝或银联）发送支付结果通知过来；

阶段二：后台进程异步在订单失效时间内去查询第三方，获取支付结果；

阶段三：第三方的支付结果处于非终态（支付成功或失败），expire_time订单失效时间到了，则会尝试向第三方发起关闭订单，成功后置订单为支付失败；

阶段四：关闭订单失败后，尝试置支付失败的终态。



备注：

单品优惠活动detail微信规范：

| 参数名       | 类型   | 是否必输 | 最大长度 | 示例       | 描述                                                         |
| ------------ | ------ | -------- | -------- | ---------- | ------------------------------------------------------------ |
| cost_price   | int    | false    | -        | 608800     | 订单原价：                                                                        1.商户侧一张小票订单可能被分多次支付，订单原价用于记录整张小票的交易金额。                                               2.当订单原价与支付金额不相等，则不享受优惠。            3.该字段主要用于防止同一张小票分多次支付，以享受多次优惠的情况，正常支付订单不必上传此参数。             PS：单品券优惠cost_price需上送，且与biz_content内的total_fee保持一致，否则无法享受优惠 |
| receipt_id   | str    | false    | 32       | wx123      | 商家小票ID                                                   |
| goods_detail | object | true     | -        | 示例见下文 | 单品信息，使用Json数组格式提交。注意goods_detail字段的格式为\"goods_detail\":[{}],较多商户写成\"goods_detail\":{} |

单品优惠活动goods_detail字段说明：

| 参数名         | 类型 | 是否必输 | 最大长度 | 示例         | 描述                                                         |
| -------------- | ---- | -------- | -------- | ------------ | ------------------------------------------------------------ |
| goods_id       | str  | true     | 32       | 商品编码     | 商品编码：                                                                        由半角的大小写字母、数字、中划线、下划线中的一种或几种组成 |
| wxpay_goods_id | str  | false    | 32       | 1001         | 微信侧商品编码：                                                      微信支付定义的统一商品编号（没有可不传） |
| goods_name     | str  | false    | 256      | iPhone6s 16G | 商品名称：                                                           商品的实际名称 |
| quantity       | int  | true     | -        | 1            | 商品数量：                                                           用户购买的数量 |
| price          | int  | true     | -        | 528800       | 商品单价：                                                           单位为：分。如果商户有优惠，需传输商户优惠后的单价(例如：用户对一笔100元的订单使用了商场发的优惠券100-50，则活动商品的单价应为原单价-50) |

单品优惠活动detail支付宝规范：

| 参数名          | 类型   | 是否必输 | 最大长度 | 示例                            | 描述                                                         |
| --------------- | ------ | -------- | -------- | ------------------------------- | ------------------------------------------------------------ |
| goods_id        | str    | true     | 32       | apple-01                        | 商品的编号                                                   |
| alipay_goods_id | str    | false    | 32       | 20010001                        | 支付宝定义的统一商品编号                                     |
| goods_name      | str    | true     | 256      | ipad                            | 商品名称                                                     |
| quantity        | int    | true     | 10       | 1                               | 商品数量                                                     |
| price           | double | true     | 9        | 2000                            | 商品单价                                                     |
| goods_category  | str    | false    | 24       | 34543238                        | 商品类目                                                     |
| categories_tree | str    | false    | 128      | 124868003\|126232002\|126252004 | 商品类目树，从商品类目根节点到叶子节点的类目id组成，类目id值使用\|分割 |
| body            | str    | false    | 1000     | 特价手机                        | 商品描述信息                                                 |
| show_url        | str    | false    | 400      | <http://www.alipay.com/xxx.jpg> | 商品的展示地址                                               |

